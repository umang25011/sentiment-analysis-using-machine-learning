#LOAD THE DATA
root_path=[] #folder path
filename="" #filename of cleaned data
train_data=[] #to hold text
target=[] #to hold actual answer of text

file=open(root_path+filename)
for line in file:
  x,y=line.split(":")
  train_data.append(x.strip()) #strip to remove \n from the end of the text
  target.append(y.strip())
  

#CONVERT DATA INTO VECTOR
from sklearn.feature_extraction.text import CountVectorizer

text_to_vector=CountVectorizer(binary=False,ngram_range=(1,2))
text_to_vector.fit(train_data) #create a matrix of all words
train_data_vector=text_to_vector.fit(train_data) #convert the data into vector

#to split data into testing and training
from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(
    train_data_vector,target,train_size=0.80)
    
#to analyze the model
from sklearn.metrics import accuracy_score , precision_score, recall_score

#LOGISTIC REGRESSION MODEL
from sklearn.linear_model import LogisticRegression

logistic_model=LogisticRegression(C=0.06,max_iter=150,solver="lbfgs")
#check the many values of c and find one giving maximum output

logistic_model.fit(x_train,y_train) #train the model
test_answers=logistic_model.predict(x_test) #test the model 

#analyze
print("FOR LOGISTIC MODEL")
print ("Accuracy: %s" % accuracy_score(y_test,test_answers))
print ("Precision: %s" % precision_score(y_test, test_answers))
print ("Recall: %s" % recall_score(y_test, test_answers))

#SVC MODEL
from sklearn.svm import LinearSVC

svc_model=LinearSVC(C=0.01,max_iter=150)
#check the many values of c and find one giving maximum output

svc_model.fit(X_train,y_train) #train model
test_answers=svc_model.predict(x_test) #test model

#analyze
print("FOR SVC :")
print ("Accuracy: %s" % accuracy_score(y_test,test_answers))
print ("Precision: %s" % precision_score(y_test, test_answers))
print ("Recall: %s" % recall_score(y_test, test_answers))

#STORE THE MODEL FOR FUTURE USE
import joblib

filename="logistic_model.pkl" #enter file name
joblib.dump(logistic_model,open(root_path+filename,'wb')) #wb or w+ according to python distribution

filename="svc_model.pkl" #enter file name
joblib.dump(svc_model,open(root_path+filename,'wb'))

filename="text_to_vector.pkl" #enter file name
joblib.dump(text_to_vector,open(root_path+filename,'wb'))
